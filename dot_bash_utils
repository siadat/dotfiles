# Bash utils by Sina
# Source this in your ~/.bash_profile
# vim: ft=bash
export HISTFILESIZE=1000000
export HISTSIZE=1000000
export EDITOR=nvim
alias v="${EDITOR} -O"
alias view="${EDITOR} -R -O"
alias date-slug='date +%F-%T'
alias grep='grep --color'
alias abspath='readlink -f'

alias p='git pull origin HEAD'
alias push='git push origin HEAD'
alias gd='git diff --stat -p -w' # -U0
alias gdc='git diff --stat -p -w --cached' # -U0
alias gsh='git show --stat -p -w' #  -U0
alias gs='git status'

# open results of rg in EDITOR
function vrg() {
  $EDITOR -O $(rg -l "$@")
}

function capture () {
    local out;
    out="$(mktemp --tmpdir=. --suffix=.txt)";
    tmux capture-pane -J -S- -b mybuf;
    tmux save-buffer -b mybuf "${out}";
    echo "${out}";
    nvim "${out}"
}

function dotfiles {
	(
		while getopts "d" opt; do
		  case $opt in
		    d)
		      DEV=true
		      ;;
		    \?)
		      echo "Valid options:"
		      echo "  -n Do not push changes to remote"
		      exit 1
		      ;;
		  esac
		done

		if [ ! -n "$DEV" ]; then
			echo "chezmoi update" && chezmoi update
		fi

		echo "chezmoi apply" && chezmoi apply
		cd ~/.local/share/chezmoi/
		git add -u
		git --no-pager diff -w --exit-code --stat -p origin/main && return
		git status

		if [ -n "$DEV" ]; then
			echo "Changes not pushed to remote"
			return
		fi
		read -r -p "Commit and push? [y/N] " response

		case "$response" in
			y)
				git commit -m "chezmoi: update"
				git push origin HEAD
				;;
			*)
				echo "Aborted"
				;;
		esac
	)
}

function build_zig_from_source() {
	(
		set -ex

		# dependencies
		brew list llvm || brew install llvm
		brew list zstd || brew install zstd
		dpkg -s libtinfo-dev || sudo apt install libtinfo-dev

		# build
		zig_clone_path=~/src/zig
		mkdir -p $zig_clone_path/build
		cd $zig_clone_path/build
		time cmake .. -DCMAKE_PREFIX_PATH="$(brew --prefix llvm);$(brew --prefix zstd)"
		make install

		# test
		LD_LIBRARY_PATH=/home/linuxbrew/.linuxbrew/lib/ ~/src/zig/build/stage3/bin/zig --help > /dev/null
		echo $?
	)
}

function monitor-tcp-port () {
	local port="$1"
	sudo tshark -i lo -Y "tcp.port == ${port}" -T fields -d tcp.port==${port},echo \
	    -e frame.time \
	    -e ip.src \
	    -e tcp.srcport \
	    -e ip.dst \
	    -e tcp.dstport \
	    -e tcp.len \
	    -e tcp.seq \
	    -e tcp.stream \
	    -e echo.data
	    # -e tcp.flags \
	    # -e tcp.ack \
}

function public-file-server () {
	cd ~/public && timeout 1h python3 -m http.server
}

# print one byte (and its ascii representation) per line
function hexdump-byte-by-byte () {
	hexdump -v -e '1/1 "0x%02x "' -e '1/1 "%_p\n"' "$@"
}
